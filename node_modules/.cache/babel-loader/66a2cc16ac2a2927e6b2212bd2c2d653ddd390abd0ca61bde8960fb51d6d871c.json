{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatih\\\\IdeaProjects\\\\tftcommerce\\\\src\\\\pages\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // User Login info\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n\n    // Find user login info\n    const userData = database.find(user => user.username === uname.value);\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"lan\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Login","_s","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fatih/IdeaProjects/tftcommerce/src/pages/login/login.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport const Login = () => {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n  \r\n    // User Login info\r\n    const database = [\r\n      {\r\n        username: \"user1\",\r\n        password: \"pass1\"\r\n      },\r\n      {\r\n        username: \"user2\",\r\n        password: \"pass2\"\r\n      }\r\n    ];\r\n  \r\n    const errors = {\r\n      uname: \"invalid username\",\r\n      pass: \"invalid password\"\r\n    };\r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n    \r\n        var { uname, pass } = document.forms[0];\r\n    \r\n        // Find user login info\r\n        const userData = database.find((user) => user.username === uname.value);\r\n    \r\n        // Compare user info\r\n        if (userData) {\r\n          if (userData.password !== pass.value) {\r\n            // Invalid password\r\n            setErrorMessages({ name: \"pass\", message: errors.pass });\r\n          } else {\r\n            setIsSubmitted(true);\r\n          }\r\n        } else {\r\n          // Username not found\r\n          setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n      };\r\n    \r\n      // Generate JSX code for error message\r\n      const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n          <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    return (\r\n        <div>lan</div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMU,QAAQ,GAAG,CACf;IACEC,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACR,CAAC;EACD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B;IACAA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MAAEJ,KAAK;MAAEC;IAAK,CAAC,GAAGI,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;;IAEvC;IACA,MAAMC,QAAQ,GAAGX,QAAQ,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACZ,QAAQ,KAAKG,KAAK,CAACU,KAAK,CAAC;;IAEvE;IACA,IAAIH,QAAQ,EAAE;MACZ,IAAIA,QAAQ,CAACT,QAAQ,KAAKG,IAAI,CAACS,KAAK,EAAE;QACpC;QACAjB,gBAAgB,CAAC;UAAEkB,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEb,MAAM,CAACE;QAAK,CAAC,CAAC;MAC1D,CAAC,MAAM;QACLN,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC,MAAM;MACL;MACAF,gBAAgB,CAAC;QAAEkB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEb,MAAM,CAACC;MAAM,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED;EACA,MAAMa,kBAAkB,GAAIF,IAAI,IAC9BA,IAAI,KAAKnB,aAAa,CAACmB,IAAI,iBACzBtB,OAAA;IAAKyB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEvB,aAAa,CAACoB;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CACpD;EAEL,oBACI9B,OAAA;IAAA0B,QAAA,EAAK;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEtB,CAAC;AAAA5B,EAAA,CApDYD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}